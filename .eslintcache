[{"/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/index.js":"1","/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/App.js":"2","/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/reportWebVitals.js":"3","/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/Components/postCard.js":"4","/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/URLs.js":"5"},{"size":500,"mtime":1612131702594,"results":"6","hashOfConfig":"7"},{"size":1433,"mtime":1612145128552,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612131702596,"results":"9","hashOfConfig":"7"},{"size":1174,"mtime":1612321792913,"results":"10","hashOfConfig":"7"},{"size":43,"mtime":1612145079095,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"bwo1nr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/index.js",[],["25","26"],"/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/App.js",["27","28","29","30","31","32"],"import logo from './logo.svg';\nimport './App.css';\nimport Postcard from \"./Components/postCard\"\nimport React, { useState, useEffect, Component } from 'react';\nimport {URL} from \"./URLs.js\";\n\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch(`${URL}/posts`)\n    .then(response => response.json())\n    .then(response => setPosts(response.sort((a,b) => b.likecount - a.likecount)))\n  }, []);\n\n  const handleVote = (e) => {\n\n    let currentPost = posts.find(post => post.id == e.target.id)\n\n    if (e.target.className == \"upvote\") currentPost.likecount += 1\n    if (e.target.className == \"downvote\") currentPost.likecount -= 1\n    \n    let currentPostIndex = posts.findIndex(post => post.id == e.target.id)\n    let tempPosts = [...posts]\n    tempPosts[currentPostIndex] = currentPost\n    setPosts(tempPosts)\n   \n    \n    fetch(`${URL}/posts/${e.target.id}`, {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n          likecount: currentPost.likecount \n      })\n    })\n      .then(response => {\n        console.log(response)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n        {posts.map(post => <Postcard key={post.id} post={post} handleVote={handleVote}/>)}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/reportWebVitals.js",[],"/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/Components/postCard.js",["33","34","35","36"],"import React from \"react\";\nimport '../App.css';\n\nfunction Postcard(props){\n    return(\n        <div className=\"postcard\">\n            <div className=\"vote-div\">\n                <img style={{width: \"80%\", marginTop:\"50%\"}} className={\"thumbsup\"} src=\"https://www.flaticon.com/svg/vstatic/svg/1533/1533908.svg?token=exp=1612147425~hmac=b72d94a00abf1330cca8516f1377c6e4\" id={props.post.id} className=\"upvote\" onClick={props.handleVote}/>\n                <p> {props.post.likecount}</p>\n                <img style={{width: \"80%\"}} className={\"thumbsdown\"} src=\"https://www.flaticon.com/svg/vstatic/svg/1533/1533914.svg?token=exp=1612147251~hmac=5cf55c5e871148e8a5da1cebd84e418c\"id={props.post.id} className=\"downvote\"onClick={props.handleVote}/>\n            </div>\n            <div className=\"table-cell\">                \n                <div className=\"content-div\">\n                    <p id={props.post.id}> Posted by u/{props.post.user.username}  on {props.post.user.created_at}</p>\n                    <h1> {props.post.title}  </h1>\n                    <p> {props.post.body}</p>\n                </div>\n            </div>\n        </div>\n    )\n  }\n\n  export default Postcard; ","/Users/miles/Desktop/reddit_clone/reddit_clone_frontend/reddit_clone_frontend/src/URLs.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":4,"column":38,"nodeType":"43","messageId":"44","endLine":4,"endColumn":47},{"ruleId":"46","severity":1,"message":"47","line":20,"column":50,"nodeType":"48","messageId":"49","endLine":20,"endColumn":52},{"ruleId":"46","severity":1,"message":"47","line":22,"column":28,"nodeType":"48","messageId":"49","endLine":22,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":23,"column":28,"nodeType":"48","messageId":"49","endLine":23,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":25,"column":60,"nodeType":"48","messageId":"49","endLine":25,"endColumn":62},{"ruleId":"50","severity":1,"message":"51","line":8,"column":17,"nodeType":"52","endLine":8,"endColumn":273},{"ruleId":"53","severity":1,"message":"54","line":8,"column":226,"nodeType":"55","endLine":8,"endColumn":244},{"ruleId":"50","severity":1,"message":"51","line":10,"column":17,"nodeType":"52","endLine":10,"endColumn":259},{"ruleId":"53","severity":1,"message":"54","line":10,"column":211,"nodeType":"55","endLine":10,"endColumn":231},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]